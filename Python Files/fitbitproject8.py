# -*- coding: utf-8 -*-
"""FitbitProject8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZRilbQ1F2pxMT8IILoN2b8MgL_h6uivF
"""

# import packages
import numpy as np
import pandas as pd
import datetime as dt
import matplotlib.pyplot as plt
import seaborn as sns

# import the dataset and preview
daily_activity = pd.read_csv('/content/drive/MyDrive/dailyActivity_merged.csv')

daily_activity.shape

daily_activity.head(6)

daily_activity.info()

daily_activity.describe()

daily_activity.dtypes

# check out missing values in the dataset
missing_values_count = daily_activity.isnull().sum()

# look at the # of missing points in all columns
missing_values_count[:]

# Count distinct IDs to confirm whether data has 30 IDs as claimed by the survey
unique_id = len(pd.unique(daily_activity["Id"]))
print('Number of unique ID: ' + str(unique_id))

"""***From the above observations, we noted that:***

1 Data has 15 columns and 940 rows

2 There are no Null or missing values

3 ActivityDate is wrongly classified as object dtype and has to be converted to datetime64 dtype

4 There are 33 distinct IDs, instead of 30 distinct IDs as expected. Some users might have created additional IDs during the survey period

# **Clean & transform data**
"""

# Convert ActivityDate from object to datetime64type
daily_activity["ActivityDate"] = pd.to_datetime(daily_activity["ActivityDate"], format = "%m/%d/%Y")

daily_activity.info()
daily_activity.ActivityDate.head(5)

# Create new list of re-arranged columns

new_cols = ['Id', 'ActivityDate','DayOfTheWeek', 'TotalSteps', 'TotalDistance', 'TrackerDistance', 'LoggedActivitiesDistance', 'VeryActiveDistance', 'ModeratelyActiveDistance', 'LightActiveDistance', 'SedentaryActiveDistance', 'VeryActiveMinutes', 'FairlyActiveMinutes',
            'LightlyActiveMinutes', 'SedentaryMinutes', 'TotalExerciseMinutes', 'TotalExerciseHours', 'Calories']

# Reindex function to re-arrange columns based on "new_cols"

df_activity = daily_activity.reindex(columns=new_cols)
df_activity.head(5)

# Create new column "day_of_the_week" to represent day of the week
df_activity["DayOfTheWeek"] = df_activity["ActivityDate"].dt.day_name()
df_activity["DayOfTheWeek"].head(5)

# Rearranging and renaming columns
df_activity.rename(columns={"Id":"Id", "ActivityDate":"Date", "DayOfTheWeek":"Day_of_the_week", "TotalSteps":"Total_steps",
                              "TotalDistance":"Total_dist", "TrackerDistance":"Track_dist",
                              "LoggedActivitiesDistance":"Logged_dist", "VeryActiveDistance":"Very_active_dist",
                              "ModeratelyActiveDistance":"Moderate_active_dist", "LightActiveDistance":"Light_active_dist",
                              "SedentaryActiveDistance":"Sedentary_active_dist", "VeryActiveMinutes":"Very_active_mins",
                              "FairlyActiveMinutes":"Fairly_active_mins", "LightlyActiveMinutes":"Lightly_active_mins",
                              "SedentaryMinutes":"Sedentary_mins", "TotalExerciseMinutes":"Total_mins",
                              "TotalExerciseHours":"Total_hours","Calories":"Calories"}, inplace=True)

print(df_activity.columns.values)
df_activity.head(5)

# create new column "total_mins" containing sum of total minutes

df_activity["Total_mins"] = df_activity["Very_active_mins"] + df_activity["Fairly_active_mins"] + df_activity["Lightly_active_mins"] + df_activity["Sedentary_mins"]
df_activity["Total_mins"].head(5)

"""
**3. Analyze the dataset**"""

# take a look at general statistic
df_activity.describe()

"""**Statistical findings:**

On average, users logged 7,637 steps or 5.4km which is not adequate. As recommended by Centre for Disease Control (CDC), an adult female has to aim at least 10,000 steps or 8km per day to benefit from general health, weight loss and fitness improvement. Source: Medical News Today article.

Sedentary users are the majority logging on average 991 minutes or 20 hours making up 81% of total average minutes.

Note that average calories burned is 2,303 calories which is equal to 0.6 pound. This could not interpret into detail as calories burned depend on several factors such as the age, weight, daily tasks, exercise, hormones and daily calorie intake. Source: Health Line article

# **Visualize the findings**
"""

# create histogram for No.times users logged in app across week

# plot histogram
plt.style.use("default")
plt.figure(figsize=(8, 6))

# Assuming the correct column name is 'Day_of_the_week' (based on Global variables)
plt.hist(df_activity['Day_of_the_week'], bins = 7, width = 0.6, color = "green", edgecolor = "red")

# adding annotations and visuals
plt.xlabel("Day of the week")
plt.ylabel("Frequency")
plt.title("No. of times users logged in app across the week")
plt.grid(True)
plt.show()

"""# This histogram shows that:
Users prefer or remember (giving them the benefit of doubt that they had forgotten) to track their activity on the app during midweek from Tuesday to Friday.

Note that the frequency dropped on Friday and continue on weekends and Monday.
"""

# Create scatter plot for Calories Burned for Every Step taken
plt.style.use("default")
plt.figure(figsize=(10, 8))
plt.scatter(df_activity.Total_steps, df_activity.Calories, alpha = 0.8, c = df_activity.Calories, cmap = "Accent")

# add annotations and visuals

median_Calories = 2303
median_Steps = 7637
plt.colorbar(orientation = "vertical")
plt.axvline(median_Steps, color = "Green", label = "Median steps")
plt.axhline(median_Calories, color = "Purple", label = "Median calories burned")
plt.xlabel("Steps taken")
plt.ylabel("Calories burned")
plt.title("Calories Burned for every step taken")
plt.grid(True)
plt.legend()
plt.show()

"""# The following discoveries were made from the scatter plot:



1.   It is a positive correlation.
2.   Intensity of calories burned increase when users are at the range of > 0 to 15,000 steps with calories burn rate cooling down from 15,000 steps onwards.


3.   Noted a few outliers:


*   Zero steps with zero to minimal calories burned.
*   1 observation of > 35,000 steps with < 3,000 calories burned.


*   Deduced that outliers could be due to natural variation of data, change in userâ€™s usage or errors in data collection (ie. miscalculations, data contamination or human error).









"""

# calculating total of individual minutes column
very_active_mins = df_activity["Very_active_mins"].sum()
fairly_active_mins = df_activity["Fairly_active_mins"].sum()
lightly_active_mins = df_activity["Lightly_active_mins"].sum()
sedentary_mins = df_activity["Sedentary_mins"].sum()

# plotting pie chart
slices = [very_active_mins, fairly_active_mins, lightly_active_mins, sedentary_mins]
labels = ["Very active minutes", "Fairly active minutes", "Lightly active minutes", "Sedentary minutes"]
colours = ["lightcoral", "yellowgreen", "lightskyblue", "darkorange"]
explode = [0, 0, 0, 0.1]
plt.style.use("default")
plt.pie(slices, labels = labels,
        colors = colours, wedgeprops = {"edgecolor": "black"},
        explode = explode, autopct = "%1.1f%%")
plt.title("Percentage of Activity in Minutes")
plt.tight_layout()
plt.show()

"""# From this pie chart:


1.   Sedentary minutes takes the largest slice at 81.3%
2.   This indicates that users are using the FitBit app to log daily activities such as daily commute, inactive movements (moving from one spot to another) or running errands


3. App is rarely being used to track fitness (ie. running) as per the minor percentage of fairly active activity (1.1%) and very active activity (1.7%). This is highly discouraging as FitBit app was developed to encourage fitness





"""

#Save the merged dataset to a new CSV file
df_activity.to_csv("fitbit_cleaned.csv", index = False)

"""# **Business Objectives:**

**1 What are the trends identified?**


*   Majority of users (81.3%) are using the FitBit app to track sedentary activities and not using it for tracking their health habits.
*   Users prefer to track their activities during weekdays as compared to weekends - perhaps because they spend more time outside on weekdays and stay in on weekends

# **2 How could these trends apply to customers?**


*   Both companies develop products that empower women to track their health, habits, and fitness data, encouraging informed decisions for healthier lifestyles. By offering personalized insights, these products help users understand their current habits and identify areas for improvement. This approach not only promotes wellness but also fosters a proactive attitude towards health. The same principles can be applied to a broader customer base, providing tailored health solutions that resonate with diverse needs, ultimately driving positive behavioral changes and enhancing overall well-being across different demographics.

# **How could these trends help influence marketing strategy?**



*   These trends can significantly shape the marketing strategy by positioning the app as a comprehensive fitness companion. The marketing team can emphasize educating users about the benefits of regular exercise and healthy habits, creating content that highlights the app's ability to provide tailored exercise suggestions, such as quick 10-minute weekday routines and more intense weekend workouts. Additionally, by offering insights into calorie intake and burn rates, the app can help users make informed dietary choices.

On weekends, the app can send motivational notifications, reminding users to engage in their scheduled intense workouts. This proactive engagement not only boosts user participation but also reinforces the app's role in supporting their fitness journey.
"""

